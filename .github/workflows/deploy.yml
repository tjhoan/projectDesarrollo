name: Deploy to EC2

on:
  push:
    branches:
      - master
      - docker
  pull_request:
    branches:
      - master
      - docker

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

    - name: Install Docker and Docker Compose on EC2
      run: |
        ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          # Instalar Docker
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl enable --now docker

          # Instalar Docker Compose
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

          # Verificar instalación de Docker y Docker Compose
          docker --version
          docker-compose --version
        EOF

    - name: Deploy to EC2
      run: |
        ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          # Crear el directorio si no existe
          sudo mkdir -p /var/www/html
          sudo mkdir -p /var/www/html/tu-proyecto
          
          # Si no está el proyecto, clonarlo o moverlo allí
          # git clone https://github.com/tjhoan/projectDesarrollo.git /var/www/html/tu-proyecto
          
          # Acceder al directorio
          cd /var/www/html/tu-proyecto

          # Eliminar contenedores de Laravel pero no la base de datos
          docker-compose -f docker-compose.prod.yml down --volumes
          
          # Volver a levantar los contenedores (sin eliminar la base de datos)
          docker-compose -f docker-compose.prod.yml up -d --build

          # Ejecutar las migraciones y otras tareas de Laravel
          docker exec laravel-prod php artisan migrate --force
          docker exec laravel-prod php artisan config:cache
          docker exec laravel-prod php artisan route:cache
          docker exec laravel-prod php artisan view:cache
        EOF
      env:
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        COMPOSER_PROCESS_TIMEOUT: 0
        COMPOSER_NO_INTERACTION: 1
        COMPOSER_NO_AUDIT: 1
